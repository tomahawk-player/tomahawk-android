apply plugin: "com.android.application"

repositories {
    flatDir {
        dirs 'libs'
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        renderscriptTargetApi 20
        renderscriptSupportModeEnabled true
        def version = readVersionName()
        def code = Integer.parseInt(version.replaceAll('([\\d\\.]*).*', '$1').replaceAll('\\.', ''))
        println("version code: $code")
        versionName version
        versionCode code
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "2g"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.
                        replace(".apk", "-" + defaultConfig.versionName + ".apk")
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles "../proguard-android.txt"
        }
        debug {
            versionNameSuffix "_debug"
            zipAlignEnabled true
        }
    }

    productFlavors {
        armv7a {
            ndk {
                abiFilter "armeabi-v7a"
            }
            versionName defaultConfig.versionName + "_armv7a"
            versionCode Integer.parseInt("2$defaultConfig.versionCode")
        }
        armv8a {
            ndk {
                abiFilter "arm64-v8a"
            }
            versionName defaultConfig.versionName + "_armv8a"
            versionCode Integer.parseInt("3$defaultConfig.versionCode")
        }
        mips {
            ndk {
                abiFilter "mips"
            }
            versionName defaultConfig.versionName + "_mips"
            versionCode Integer.parseInt("4$defaultConfig.versionCode")
        }
        x86 {
            ndk {
                abiFilter "x86"
            }
            versionName defaultConfig.versionName + "_x86"
            versionCode Integer.parseInt("6$defaultConfig.versionCode")
        }
        x86_64 {
            ndk {
                abiFilter "x86_64"
            }
            versionName defaultConfig.versionName + "_x86_64"
            versionCode Integer.parseInt("7$defaultConfig.versionCode")
        }
    }
}

def Properties props = new Properties()
def propFile = file('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        android.buildTypes.release.signingConfig = android.signingConfigs.release
        android.buildTypes.debug.signingConfig = android.signingConfigs.release
    }
}

dependencies {
    compile fileTree(dir: "libs", include: ["*.jar"])
    compile(name: 'circularprogressview-debug', ext: 'aar')
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:support-v4:23.4.0'
    compile 'se.emilsjolander:stickylistheaders:2.7.0'
    compile('ch.acra:acra:4.7.0') {
        transitive = false
    }
    compile 'com.google.code.gson:gson:2.5'
    compile 'com.google.android.gms:play-services-base:8.4.0'
    compile('com.stanfy:gson-xml-java:0.1.7') {
        exclude group: 'xmlpull', module: 'xmlpull'
    }
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp:okhttp:2.7.2'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.7.2'
    compile 'com.squareup.okhttp:logging-interceptor:2.7.2'
    compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'
    compile 'de.mrmaffen:vlc-android-sdk:1.9.8'
    compile 'org.apache.lucene:lucene-core:4.7.2'
    compile 'org.apache.lucene:lucene-analyzers-common:4.7.2'
    compile 'org.apache.lucene:lucene-queryparser:4.7.2'
    compile 'commons-io:commons-io:2.4'
    compile 'net.sourceforge.findbugs:jsr305:1.3.7'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.sothree.slidinguppanel:library:3.2.1'
    compile 'com.uservoice:uservoice-android-sdk:1.2.4'
    compile 'de.greenrobot:eventbus:2.4.1'
    compile 'com.daimajia.swipelayout:library:1.2.0@aar'
    compile 'org.jdeferred:jdeferred-android-aar:1.2.4'
    compile 'org.slf4j:slf4j-android:1.7.13'
}
